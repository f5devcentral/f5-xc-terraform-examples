name: "AWS XC Cloud Credentials Apply"

on:
  push:
    branches:
      - aws-cloud-credentials
  workflow_dispatch:
    inputs:
      TF_VAR_name:
        description: "Deployment name (optional)"
        required: false
        type: string
      TF_VAR_prefix:
        description: "Prefix (optional)"
        required: false
        type: string
      TF_CLOUD_WORKSPACE_AWS_CREDENTIALS:
        description: "TF Cloud Workspace (optional)"
        required: false
        type: string
  workflow_call:
    inputs:
      TF_VAR_name:
        description: "Deployment name"
        required: false
        type: string
      TF_VAR_prefix:
        description: "Prefix"
        required: false
        type: string
      TF_CLOUD_WORKSPACE_AWS_CREDENTIALS:
        description: "TF Cloud Workspace"
        required: false
        type: string
    secrets:
      TF_API_TOKEN:
        required: true
      TF_CLOUD_ORGANIZATION:
        required: true
      XC_API_P12_FILE:
        required: true
      XC_P12_PASSWORD :
          required: true
      XC_API_URL:
        required: true
      AWS_ACCESS_KEY:
        required: true
      AWS_SECRET_KEY:
        required: true
      XC_AWS_ACCESS_KEY:
        required: false
      XC_AWS_SECRET_KEY:
        required: false
      XC_AWS_CLOUD_CREDENTIALS_NAME:
        required: false
    outputs:
      aws_credentials_name:
        description: "AWS XC Cloud Credentials Name"
        value: ${{ jobs.aws_credentials.outputs.aws_credentials_name }}
      aws_credentials_namespace:
        description: "AWS XC Cloud Credentials Namespace"
        value: ${{ jobs.aws_credentials.outputs.aws_credentials_namespace }}

env:
  TF_VAR_name: "aws-cloud-credentials"
  TF_VAR_prefix: ""
  TF_CLOUD_WORKSPACE_AWS_CREDENTIALS: "aws-cloud-credentials"

jobs:
  aws_credentials:
    name: "AWS Cloud Credentials"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./f5/xc/aws-cloud-credentials"
    env:
      VOLT_API_URL: ${{ secrets.XC_API_URL }}
      VOLT_API_P12_FILE: "./api.p12"
      VES_P12_PASSWORD: ${{ secrets.XC_P12_PASSWORD }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      TF_VAR_xc_aws_access_key: ${{ secrets.XC_AWS_ACCESS_KEY }}
      TF_VAR_xc_aws_secret_key: ${{ secrets.XC_AWS_SECRET_KEY }}
      TF_VAR_aws_cloud_credentials_name : ${{ secrets.XC_AWS_CLOUD_CREDENTIALS_NAME }}
    outputs:
      aws_credentials_name: ${{ steps.output_vars.outputs.aws_credentials_name }}
      aws_credentials_namespace: ${{ steps.output_vars.outputs.aws_credentials_namespace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: apply_variables 
        uses: "./.github/actions/apply-variables" 
        with: 
          vars_json: "${{ toJSON(vars) }}" 
          vars_prefix: "AWS_CLOUD_CRENDETIALS_TF_VAR_"
          inputs_json: "${{ toJSON(inputs) }}" 

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Setup Terraform Backend
        id: backend
        run: |
          echo "${{secrets.XC_API_P12_FILE}}" | base64 -d > api.p12
          echo VOLT_API_P12_FILE="$PWD/api.p12" >> "$GITHUB_ENV"

          cat > backend.tf << EOF
          terraform {
            cloud {
              organization = "${{ secrets.TF_CLOUD_ORGANIZATION }}"
              workspaces {
                name = "$TF_CLOUD_WORKSPACE_AWS_CREDENTIALS"
              }
            }
          }
          EOF
          
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      - name: Set output vars
        id: output_vars
        run: |
          printf "aws_credentials_name=%s\n" $(terraform-bin output -raw name) >> "$GITHUB_OUTPUT"
          printf "aws_credentials_namespace=%s\n" $(terraform-bin output -raw namespace) >> "$GITHUB_OUTPUT"
