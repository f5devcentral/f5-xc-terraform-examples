name: "Teachable 00-intro Destroy"

on:
  workflow_dispatch:
    inputs:
      destroy_dependencies:
        description: Destroy dependencies
        type: boolean
        required: true
        default: true
  workflow_call:
    inputs:
      destroy_dependencies:
        description: Destroy dependencies
        type: boolean
        required: true
        default: true
    secrets:
      TF_CLOUD_ORGANIZATION:
      TF_API_TOKEN:
      XC_API_URL:
      XC_P12_PASSWORD:
      XC_API_P12_FILE:
      AWS_ACCESS_KEY:
      AWS_SECRET_KEY:
      AZURE_SUBSCRIPTION_ID:
      AZURE_TENANT_ID:
      AZURE_CLIENT_ID:
      AZURE_CLIENT_SECRET:

jobs:
  apply_variables:
    name: "Apply Environment Variables"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./teachable/00-intro"
    env: 
      TF_VAR_name: "teachable"
      TF_VAR_prefix: ""
      TF_CLOUD_WORKSPACE_HELLO_WORLD: "hello-world"
      TF_CLOUD_WORKSPACE_XC_CREDENTIALS: "xc-credentials"
      TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS: "azure-cloud-credentials"
      TF_CLOUD_WORKSPACE_AWS_CREDENTIALS: "aws-cloud-credentials"
    outputs:
      TF_VAR_name: ${{ steps.update_output.outputs.TF_VAR_name }}
      TF_VAR_prefix: ${{ steps.update_output.outputs.TF_VAR_prefix }}
      TF_CLOUD_WORKSPACE_HELLO_WORLD: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_HELLO_WORLD }}
      TF_CLOUD_WORKSPACE_XC_CREDENTIALS: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_XC_CREDENTIALS }}
      TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS }}
      TF_CLOUD_WORKSPACE_AWS_CREDENTIALS: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_AWS_CREDENTIALS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - id: apply_variables 
        uses: "./.github/actions/apply-variables" 
        with: 
          vars_json: "${{ toJSON(vars) }}" 
          vars_prefix: "T00_TF_VAR_"
          inputs_json: "${{ toJSON(inputs) }}" 
        
      - name: update_output
        id: update_output
        shell: bash
        env:
          ALL_ENV: ${{ toJSON(env) }}
        run: |
          echo "$ALL_ENV" |
          jq -r ' 
              to_entries | 
              .[] | 
              select(.key) | 
              select(if .value | type == "string" then .value | length > 0 else .value != null end) | 
              "\(.key)=\(.value)" 
          ' >> "$GITHUB_OUTPUT" 

  terraform_cloud:
    name: "Terraform Cloud"
    needs: apply_variables
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./teachable/00-intro/terraform/terraform-cloud"
    env:
      TF_CLOUD_WORKSPACE_HELLO_WORLD: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_HELLO_WORLD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Setup Terraform Backend
        id: backend
        run: |
          cat > backend.tf << EOF
          terraform {
            cloud {
              organization = "${{ secrets.TF_CLOUD_ORGANIZATION }}"
              workspaces {
                name = "$TF_CLOUD_WORKSPACE_HELLO_WORLD"
              }
            }
          }
          EOF

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve -input=false


  xc_credentials:
    name: "XC Credentials"
    needs: apply_variables
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./teachable/00-intro/terraform/xc-credentials"
    env:
      VOLT_API_URL: ${{ secrets.XC_API_URL }}
      VES_P12_PASSWORD: ${{ secrets.XC_P12_PASSWORD }}
      TF_CLOUD_WORKSPACE_XC_CREDENTIALS: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_XC_CREDENTIALS }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Setup Terraform Backend
        id: backend
        run: |
          echo "${{secrets.XC_API_P12_FILE}}" | base64 -d > api.p12
          echo VOLT_API_P12_FILE="$PWD/api.p12" >> "$GITHUB_ENV"

          cat > backend.tf << EOF
          terraform {
            cloud {
              organization = "${{ secrets.TF_CLOUD_ORGANIZATION }}"
              workspaces {
                name = "$TF_CLOUD_WORKSPACE_XC_CREDENTIALS"
              }
            }
          }
          EOF

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve -input=false

  aws_credentials: 
    uses: ./.github/workflows/aws-cloud-credentials-destroy.yaml
    if: (inputs.destroy_dependencies == true)
    needs: apply_variables
    with: 
      TF_CLOUD_WORKSPACE_AWS_CREDENTIALS: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_AWS_CREDENTIALS }}
    secrets: 
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }} 
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }} 
      XC_API_P12_FILE: ${{ secrets.XC_API_P12_FILE }}
      XC_P12_PASSWORD: ${{ secrets.XC_P12_PASSWORD }}
      XC_API_URL: ${{ secrets.XC_API_URL }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

  azure_credentials: 
    uses: ./.github/workflows/azure-cloud-credentials-destroy.yaml
    if: (inputs.destroy_dependencies == true)
    needs: apply_variables
    with: 
      TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS }}
    secrets: 
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }} 
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }} 
      XC_API_P12_FILE: ${{ secrets.XC_API_P12_FILE }}
      XC_P12_PASSWORD: ${{ secrets.XC_P12_PASSWORD }}
      XC_API_URL: ${{ secrets.XC_API_URL }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}