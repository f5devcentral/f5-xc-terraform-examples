name: "Secure Multi-Cloud Networking Destroy"

on:
  workflow_dispatch:
    inputs:
      TF_VAR_prefix:
        description: "Prefix"
        required: false
        type: string
  workflow_call:
    inputs:
      TF_VAR_prefix:
        description: "Prefix"
        required: false
        type: string
    secrets:
      TF_CLOUD_ORGANIZATION:
      TF_API_TOKEN:
      XC_API_URL:
      XC_P12_PASSWORD:
      XC_API_P12_FILE:
      AWS_ACCESS_KEY:
      AWS_SECRET_KEY:
      AWS_SESSION_TOKEN:
      XC_AWS_CLOUD_CREDENTIALS_NAME:
      AZURE_SUBSCRIPTION_ID:
      AZURE_TENANT_ID:
      AZURE_CLIENT_ID:
      AZURE_CLIENT_SECRET:
      XC_AZURE_CLOUD_CREDENTIALS_NAME:

jobs:
  apply_variables:
    name: "Apply Environment Variables"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./workflow-guides/smcn/app-delivery-fabric/terraform"
    env: 
      TF_VAR_name: "secure-mcn"
      TF_VAR_prefix: ""
      TF_CLOUD_WORKSPACE_AWS_CREDENTIALS: "bookinfo-smcn-aws-credentials"
      TF_CLOUD_WORKSPACE_AWS_NETWORKING: "bookinfo-smcn-aws-networking"
      TF_CLOUD_WORKSPACE_AWS_VPC_SITE: "bookinfo-smcn-aws-vpc-site"
      TF_CLOUD_WORKSPACE_SECUREMCN_AWS_EKS: "bookinfo-smcn-aws-eks"
      
      TF_CLOUD_WORKSPACE_AZURE_NETWORKING: "bookinfo-smcn-azure-networking"
      TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS: "bookinfo-smcn-azure-credentials"
      TF_CLOUD_WORKSPACE_AZURE_VNET_SITE: "bookinfo-smcn-azure-vnet-site"
      TF_CLOUD_WORKSPACE_SECUREMCN_AZURE_AKS: "bookinfo-smcn-azure-aks"
      
      TF_CLOUD_WORKSPACE_SECUREMCN_WORKLOAD: "bookinfo-smcn-workload"
      TF_VAR_aws_vpc_site_name: "bookinfo-smcn-aws-vpc-site"
      TF_VAR_azure_vnet_site_name: "bookinfo-smcn-azure-vpc-site"
      TF_VAR_tags: "{\"project\": \"bookinfo-smcn\"}"
      TF_VAR_aws_region: "us-east-1"
      TF_VAR_aws_az_names: "[\"us-east-1a\"]"
      TF_VAR_azure_location: "centralus"
      TF_VAR_azure_resource_group_name: ""

      # AWS_NETWORKING
      TF_VAR_aws_inside_subnets: "[\"172.10.21.0/24\"]"
      TF_VAR_aws_outside_subnets: "[\"172.10.31.0/24\"]"
      TF_VAR_aws_workload_subnets: "[\"172.10.11.0/24\"]"
      TF_VAR_aws_vpc_cidr: "172.10.0.0/16"
      TF_VAR_eks_az_names: "[\"us-east-1a\", \"us-east-1b\"]"
      TF_VAR_eks_internal_cidrs: "[\"172.10.211.0/24\", \"172.10.212.0/24\"]"

      # AZURE_NETWORKING
      TF_VAR_azure_inside_subnets: "[\"172.10.21.0/24\"]"
      TF_VAR_azure_outside_subnets: "[\"172.10.31.0/24\"]"
      TF_VAR_azure_vnet_cidr: "172.10.0.0/16"
      TF_VAR_app_domain: "bookinfo.smcn.f5-cloud-demo.com"
      TF_VAR_create_aks_namespace: "true"
      TF_VAR_create_eks_namespace: "true"
      TF_VAR_create_xc_namespace: "true"
      TF_VAR_namespace: ""
    outputs:
      TF_VAR_name: ${{ steps.update_output.outputs.TF_VAR_name }}
      TF_VAR_prefix: ${{ steps.update_output.outputs.TF_VAR_prefix }}

      TF_CLOUD_WORKSPACE_AWS_CREDENTIALS: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_AWS_CREDENTIALS }}
      TF_CLOUD_WORKSPACE_AWS_NETWORKING: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_AWS_NETWORKING }}
      TF_CLOUD_WORKSPACE_AWS_VPC_SITE: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_AWS_VPC_SITE }}
      TF_CLOUD_WORKSPACE_SECUREMCN_AWS_EKS: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_SECUREMCN_AWS_EKS }}

      TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS }}
      TF_CLOUD_WORKSPACE_AZURE_NETWORKING: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_AZURE_NETWORKING }}
      TF_CLOUD_WORKSPACE_AZURE_VNET_SITE: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_AZURE_VNET_SITE }}
      TF_CLOUD_WORKSPACE_SECUREMCN_AZURE_AKS: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_SECUREMCN_AZURE_AKS }}

      TF_CLOUD_WORKSPACE_SECUREMCN_WORKLOAD: ${{ steps.update_output.outputs.TF_CLOUD_WORKSPACE_SECUREMCN_WORKLOAD }}

      TF_VAR_aws_vpc_site_name: ${{ steps.update_output.outputs.TF_VAR_aws_vpc_site_name }}
      TF_VAR_azure_vnet_site_name: ${{ steps.update_output.outputs.TF_VAR_azure_vnet_site_name }}
      TF_VAR_tags: ${{ steps.update_output.outputs.TF_VAR_tags }}
      TF_VAR_aws_region: ${{ steps.update_output.outputs.TF_VAR_aws_region }}
      TF_VAR_aws_az_names: ${{ steps.update_output.outputs.TF_VAR_aws_az_names }}
      TF_VAR_azure_location: ${{ steps.update_output.outputs.TF_VAR_azure_location }}
      TF_VAR_azure_resource_group_name: ${{ steps.update_output.outputs.TF_VAR_azure_resource_group_name }}

      # AWS_NETWORKING
      TF_VAR_aws_inside_subnets: ${{ steps.update_output.outputs.TF_VAR_aws_inside_subnets }}
      TF_VAR_aws_outside_subnets: ${{ steps.update_output.outputs.TF_VAR_aws_outside_subnets }}
      TF_VAR_aws_workload_subnets: ${{ steps.update_output.outputs.TF_VAR_aws_workload_subnets }}
      TF_VAR_aws_vpc_cidr: ${{ steps.update_output.outputs.TF_VAR_aws_vpc_cidr }}
      TF_VAR_eks_az_names: ${{ steps.update_output.outputs.TF_VAR_eks_az_names }}
      TF_VAR_eks_internal_cidrs: ${{ steps.update_output.outputs.TF_VAR_eks_internal_cidrs }}

      # AZURE_NETWORKING
      TF_VAR_azure_inside_subnets: ${{ steps.update_output.outputs.TF_VAR_azure_inside_subnets }}
      TF_VAR_azure_outside_subnets: ${{ steps.update_output.outputs.TF_VAR_azure_outside_subnets }}
      TF_VAR_azure_vnet_cidr: ${{ steps.update_output.outputs.TF_VAR_azure_vnet_cidr }}

      TF_VAR_app_domain: ${{ steps.update_output.outputs.TF_VAR_app_domain }}
      TF_VAR_create_aks_namespace: ${{ steps.update_output.outputs.TF_VAR_create_aks_namespace }}
      TF_VAR_create_eks_namespace: ${{ steps.update_output.outputs.TF_VAR_create_eks_namespace }}
      TF_VAR_create_xc_namespace: ${{ steps.update_output.outputs.TF_VAR_create_xc_namespace }}
      TF_VAR_namespace: ${{ steps.update_output.outputs.TF_VAR_namespace }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - id: apply_variables 
        uses: f5devcentral/f5-xc-terraform-examples/.github/actions/apply-variables@main
        with: 
          vars_json: "${{ toJSON(vars) }}" 
          vars_prefix: "TF_VAR_"
          inputs_json: "${{ toJSON(inputs) }}" 
        
      - name: update_output
        id: update_output
        shell: bash
        env:
          ALL_ENV: ${{ toJSON(env) }}
        run: |
          echo "$ALL_ENV" |
          jq -r ' 
              to_entries | 
              .[] | 
              select(.key) | 
              select(if .value | type == "string" then .value | length > 0 else .value != null end) | 
              "\(.key)=\(.value)" 
          ' >> "$GITHUB_OUTPUT" 

  aws_credentials: 
    uses: f5devcentral/f5-xc-terraform-examples/.github/workflows/aws-cloud-credentials-destroy.yaml@main
    name: "Destroy AWS Credentials"
    needs: [apply_variables, aws_networking]
    with: 
      TF_CLOUD_WORKSPACE_AWS_CREDENTIALS: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_AWS_CREDENTIALS }}
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
      XC_API_P12_FILE: ${{ secrets.XC_API_P12_FILE }}
      XC_P12_PASSWORD: ${{ secrets.XC_P12_PASSWORD }}
      XC_API_URL: ${{ secrets.XC_API_URL }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

  aws_networking: 
    uses: f5devcentral/f5-xc-terraform-examples/.github/workflows/aws-networking-destroy.yaml@main
    name: "Destroy AWS Networking"
    needs: [apply_variables, aws_vpc_site]
    with:
      TF_CLOUD_WORKSPACE_AWS_NETWORKING: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_AWS_NETWORKING }}
    secrets: 
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }} 
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }} 
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }} 
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }} 
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }} 

  aws_vpc_site: 
    uses: f5devcentral/f5-xc-terraform-examples/.github/workflows/aws-vpc-site-destroy.yaml@main
    needs: [apply_variables, workload, aws_eks]
    name: "Destroy AWS VPC Site"
    with: 
      TF_CLOUD_WORKSPACE_AWS_VPC_SITE: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_AWS_VPC_SITE }}
    secrets: 
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }} 
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }} 
      XC_API_P12_FILE: ${{ secrets.XC_API_P12_FILE }}
      XC_P12_PASSWORD: ${{ secrets.XC_P12_PASSWORD }}
      XC_API_URL: ${{ secrets.XC_API_URL }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }} 
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }} 
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }} 

  azure_networking: 
    uses: f5devcentral/f5-xc-terraform-examples/.github/workflows/azure-networking-destroy.yaml@main
    needs: [apply_variables, azure_vnet_site]
    name: "Destroy Azure Networking"
    with:
      TF_CLOUD_WORKSPACE_AZURE_NETWORKING: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_AZURE_NETWORKING }}
    secrets: 
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }} 
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }} 
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

  azure_credentials: 
    uses: f5devcentral/f5-xc-terraform-examples/.github/workflows/azure-cloud-credentials-destroy.yaml@main
    needs: [apply_variables, azure_networking]
    name: "Azure Cloud Credentials"
    with: 
      TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS }}
    secrets: 
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }} 
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }} 
      XC_API_P12_FILE: ${{ secrets.XC_API_P12_FILE }}
      XC_P12_PASSWORD: ${{ secrets.XC_P12_PASSWORD }}
      XC_API_URL: ${{ secrets.XC_API_URL }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

  azure_vnet_site: 
    uses: f5devcentral/f5-xc-terraform-examples/.github/workflows/azure-vnet-site-destroy.yaml@main
    needs: [apply_variables, workload, azure_aks]
    name: "Azure VNET Site"
    with: 
      TF_CLOUD_WORKSPACE_AZURE_VNET_SITE: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_AZURE_VNET_SITE }}
    secrets: 
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }} 
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }} 
      XC_API_P12_FILE: ${{ secrets.XC_API_P12_FILE }}
      XC_P12_PASSWORD: ${{ secrets.XC_P12_PASSWORD }}
      XC_API_URL: ${{ secrets.XC_API_URL }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

  aws_eks:
    name: "Destroy AWS EKS"
    needs: [apply_variables, workload]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./workflow-guides/smcn/app-delivery-fabric/terraform/aws-eks"
    env: 
      TF_CLOUD_WORKSPACE_SECUREMCN_AWS_EKS: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_SECUREMCN_AWS_EKS }}
      TF_VAR_name: ${{ needs.apply_variables.outputs.TF_VAR_name }}
      TF_VAR_prefix: ${{ needs.apply_variables.outputs.TF_VAR_prefix }}
      TF_VAR_aws_vpc_id: "delete"
      TF_VAR_eks_az_names: "[\"us-east-1a\"]"
      TF_VAR_aws_vpc_cidr: "10.10.0.0/16"
      TF_VAR_eks_internal_cidrs: "[\"10.10.211.0/24\"]"
      TF_VAR_route_table_id: "delete-id"
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }} 
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }} 
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Setup Terraform Backend
        id: backend
        run: |
          cat > backend.tf << EOF
          terraform {
            cloud {
              organization = "${{ secrets.TF_CLOUD_ORGANIZATION }}"
              workspaces {
                name = "$TF_CLOUD_WORKSPACE_SECUREMCN_AWS_EKS"
              }
            }
          }
          EOF
          
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve -input=false

  azure_aks:
    name: "Destroy Azure AKS"
    needs: [apply_variables, workload]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./workflow-guides/smcn/app-delivery-fabric/terraform/azure-aks"
    env: 
      TF_VAR_name: ${{ needs.apply_variables.outputs.TF_VAR_name }}
      TF_VAR_prefix: ${{ needs.apply_variables.outputs.TF_VAR_prefix }}
      TF_VAR_azure_rg_location: ${{ needs.apply_variables.outputs.TF_VAR_azure_location }}
      TF_VAR_azure_rg_name: "delete"
      TF_VAR_azure_rg_id: "/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/smcn-secure-mcn"
      TF_VAR_aws_region: ${{ needs.apply_variables.outputs.TF_VAR_aws_region }}
      TF_VAR_az_names: ${{ needs.apply_variables.outputs.TF_VAR_aws_az_names }}
      TF_VAR_node_subnet_id: "/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/example-resource-group/providers/Microsoft.Network/virtualNetworks/virtualNetworksValue/subnets/subnetValue"
      TF_VAR_public_address: "false"
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }} 
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }} 
      TF_CLOUD_WORKSPACE_SECUREMCN_AZURE_AKS: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_SECUREMCN_AZURE_AKS }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Setup Terraform Backend
        id: backend
        run: |
          cat > backend.tf << EOF
          terraform {
            cloud {
              organization = "${{ secrets.TF_CLOUD_ORGANIZATION }}"
              workspaces {
                name = "$TF_CLOUD_WORKSPACE_SECUREMCN_AZURE_AKS"
              }
            }
          }
          EOF
          
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve -input=false

  workload:
    name: "Destroy Demo Workloads"
    needs: [apply_variables]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./workflow-guides/smcn/app-delivery-fabric/terraform/workload"
    env: 
      TF_VAR_name: ${{ needs.apply_variables.outputs.TF_VAR_name }}
      TF_VAR_prefix: ${{ needs.apply_variables.outputs.TF_VAR_prefix }}

      TF_VAR_app_domain: "delete.example.com"

      TF_VAR_aws_site_name: "delete"
      TF_VAR_aws_xc_node_inside_ip: "127.0.0.1"
      TF_VAR_aws_xc_node_outside_ip: "127.0.0.1"
      TF_VAR_azure_site_name: "delete"
      TF_VAR_azure_internal_subnet_name: "delete"

      # TF Cloud
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }} 
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }} 
      TF_CLOUD_WORKSPACE_SECUREMCN_WORKLOAD: ${{ needs.apply_variables.outputs.TF_CLOUD_WORKSPACE_SECUREMCN_WORKLOAD }}
      # XC Cloud
      VOLT_API_URL: ${{ secrets.XC_API_URL }}
      VES_P12_PASSWORD: ${{ secrets.XC_P12_PASSWORD }}
      # Azure Cloud
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # AWS Cloud
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Setup Terraform Backend
        id: backend
        run: |
          echo "${{secrets.GOOGLE_CREDENTIALS}}" | base64 -d > gcloud.json
          echo GOOGLE_CLOUD_KEYFILE_JSON="$PWD/gcloud.json" >> "$GITHUB_ENV"

          echo "${{secrets.XC_API_P12_FILE}}" | base64 -d > api.p12
          echo VOLT_API_P12_FILE="$PWD/api.p12" >> "$GITHUB_ENV"

          cat > backend.tf << EOF
          terraform {
            cloud {
              organization = "${{ secrets.TF_CLOUD_ORGANIZATION }}"
              workspaces {
                name = "$TF_CLOUD_WORKSPACE_SECUREMCN_WORKLOAD"
              }
            }
          }
          EOF
          
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve -input=false