name: "Azure XC Cloud Credentials Destroy"

on:
  push:
    branches:
      - azure-cloud-credentials
  workflow_dispatch:
    inputs:
      TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS:
        description: "TF Cloud Workspace (optional)"
        required: false
        type: string
  workflow_call:
    inputs:
      TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS:
        description: "TF Cloud Workspace"
        required: false
        type: string
    secrets:
      TF_API_TOKEN:
        required: true
      TF_CLOUD_ORGANIZATION:
        required: true
      XC_API_P12_FILE:
        required: true
      XC_P12_PASSWORD :
        required: true
      XC_API_URL:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_CLIENT_ID:
        required: true
      AZURE_CLIENT_SECRET:
        required: true

env:
  TF_VAR_name: "azure-cloud-credentials"
  TF_VAR_prefix: ""
  TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS: "azure-cloud-credentials"
  TF_VAR_xc_azure_client_id: "empty"
  TF_VAR_xc_azure_client_secret: "empty"
  TF_VAR_xc_azure_tenant_id: "empty"
  TF_VAR_xc_azure_subscription_id: "empty"
  
jobs:
  azure_credentials:
    name: "Azure Cloud Credentials"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./f5/xc/azure-cloud-credentials"
    env:
      VOLT_API_URL: ${{ secrets.XC_API_URL }}
      VOLT_API_P12_FILE: "./api.p12"
      VES_P12_PASSWORD: ${{ secrets.XC_P12_PASSWORD }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: apply_variables 
        uses: "./.github/actions/apply-variables" 
        with: 
          vars_json: "${{ toJSON(vars) }}" 
          vars_prefix: "AZURE_CLOUD_CRENDETIALS_TF_VAR_"
          inputs_json: "${{ toJSON(inputs) }}" 

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Setup Terraform Backend
        id: backend
        run: |
          echo "${{secrets.XC_API_P12_FILE}}" | base64 -d > api.p12
          echo VOLT_API_P12_FILE="$PWD/api.p12" >> "$GITHUB_ENV"

          cat > backend.tf << EOF
          terraform {
            cloud {
              organization = "${{ secrets.TF_CLOUD_ORGANIZATION }}"
              workspaces {
                name = "$TF_CLOUD_WORKSPACE_AZURE_CREDENTIALS"
              }
            }
          }
          EOF
          
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve -input=false

